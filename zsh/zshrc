# zmodload zsh/zprof
bindkey -e # should be on top!

which_term(){
    ps -p $(ps -p $$ -o ppid=) -o args=
}

if [[ $(which_term) == *"kitty" ]]; then
    export TERM="xterm-kitty"
else
    export TERM=${TERM:-xterm-256color}
fi

HISTFILE="$HOME/.zsh_history" # History file
HISTSIZE=100000               # History size in memory
SAVEHIST=1000000              # The number of histsize
LISTMAX=50                    # The size of asking history
setopt EXTENDED_HISTORY       # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY     # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY        # Share history between all sessions.
setopt HIST_IGNORE_SPACE      # Do not record an entry starting with a space.
setopt HIST_REDUCE_BLANKS     # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY            # Do not execute immediately upon history expansion.
setopt HIST_BEEP              # Beep when accessing nonexistent history.

(( $+commands[sheldon] )) || {
    curl --proto '=https' -fLsS https://rossmacarthur.github.io/install/crate.sh |
        bash -s -- --repo rossmacarthur/sheldon --to ~/bin
}

[[ $OSTYPE =~ darwin ]] && {
    # Make sure homebrew has higher priority
    export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
}

# theme
# source <(starship init zsh) || warn "failed loading starship."

# You Should Use
export YSU_MODE=ALL

# forgit config
export FORGIT_FZF_DEFAULT_OPTS="--preview-window='right:60%:nohidden'"
export FORGIT_LOG_FZF_OPTS="--height '95%'"
export FORGIT_CHECKOUT_BRANCH_BRANCH_GIT_OPTS='--sort=-committerdate'

# autosuggest config
export ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS=(forward-word forward-char)
export ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=(end-of-line)

source ~/.config/zsh/zsh_misc
source ~/.config/zsh/zsh_aliases
[ -f ~/.config/zsh/zsh_local  ] && source ~/.config/zsh/zsh_local
{ head -1 ~/.config/zsh/zsh_secret | grep unlocked &>/dev/null } && source ~/.config/zsh/zsh_secret

source ~/.config/zsh/zsh_custom
source ~/.config/zsh/zsh_fzf_extra

function synchronized() {
    local lock="$1" handler="$2" fallback="$3"
    [ -e "$lock" ] && kill -0 "$(command cat "$lock" 2>/dev/null)" && return 1

    trap "command rm -f $lock" INT TERM EXIT
    mkdir -p "${lock%/*}" && echo $$ > "$lock"

    eval "$handler"
    command rm -f "$lock"
}

# cache directory for zinit
ZINIT_CACHE="/tmp/zinit::cache:$UID"
function zi::cache() {
    local srcgen="$1" dest="$ZINIT_CACHE/${2:-$1}.zi::cache" lock="$ZINIT_CACHE/lock"
    local handler="
        [ -f '$dest' ] && return # double check
        eval '$srcgen' > '$dest'
        zcompile '$dest'
    "
    if [ ! -f "$dest" ]; then
        if ! synchronized "$lock" "$handler"; then
            source <($rc_gen_cmd) && return
        fi
    fi
    source "$dest"
}

function zi::cache::cmd()   { zi::cache "$1"                      }
function zi::cache::file()  { zi::cache "< $1" "$(basename "$1")" }
function zi::cache::clean() { rm -rf "$ZINIT_CACHE" ~/.zcompdump* }

# Source all the plugins âœ¨
eval "$(sheldon source)"
